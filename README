This is the README file for Fronsetia (Free Online Service Testing
 Application), a web application that allows testing webservices.

Fronsetia was previously called SOAPServiceTester.

Author: Bogdan Drozdowski, bogdro &AT% users . sourceforge . net
License: AGPLv3+

================================================================

Requirements for compiling the application:

- the development kit for the Java language (JDK),

- Apache Maven (https://maven.apache.org).

Type 'mvn package' to compile the application.
Alternatively, you can use a 'make' utility and run just 'make' (which
 calls Maven now anyway).

By default, a minimal package, without all the required libraries inside,
 is built.

You can also build a self-contained package with all the required libraries
inside by removing all

	<scope>provided</scope>

tags from pom.xml and re-building the application (running 'mvn package').

================================================================

How to run:

- If you've built a self-contained package with all the required libraries
  inside, simply deploy the application on your server.

- If you've built a minimal package without all the required libraries
  inside:

  1. Add the JAR files listed in pom.xml in the versions given there (and
     their dependencies) to your server's CLASSPATH.
  2. Re-start your server if necessary.
  3. Deploy the application on your server.

You can get all the JAR libraries from https://central.sonatype.com/ (as for
all Maven libraries) or the respective projects' pages:

- wsdl4j.jar - the WSDL4J project (http://wsdl4j.sf.net/),
- xbean.jar - the Apache XmlBeans (https://xmlbeans.apache.org/),
- httpclient.jar - the Apache HttpComponents (https://hc.apache.org/),
- httpcore.jar - the Apache HttpComponents,
- commons-logging.jar - the Apache HttpComponents
- commons-codec.jar - Apache Commons Codec
  (https://commons.apache.org/proper/commons-codec/)
- axiom.jar - Apache Axiom (https://ws.apache.org/axiom/)
- axis2-saaj.jar - Apache Axis2 (https://axis.apache.org/axis2/java/core/)

The servlet-api.jar and javaee-api dependencies should be provided by your
 JavaEE servlet container/server.

The junit.jar dependency (and all other with <scope>test</scope>) are not
 required to build or run the application.

================================================================

How to use:

1. Access the application on the server from a browser. The exact URL depends
   on your server and the name you gave the application.
2. Type the WSDL address on the application's main page and proceed.
3. Choose the operation to run, fill the data and press the button with
   the operation's name.

You can start from the page with the list of operations by passing the
 address of the WSDL file in the URL.
